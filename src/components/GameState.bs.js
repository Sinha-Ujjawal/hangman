// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_SetString from "rescript/lib/es6/belt_SetString.js";
import * as Caml_splice_call from "rescript/lib/es6/caml_splice_call.js";
import * as RandomWordGenerator from "../utils/RandomWordGenerator/RandomWordGenerator.bs.js";

function initPlayGame(param) {
  return {
          TAG: /* Play */0,
          word: RandomWordGenerator.getRandomWord(undefined).toUpperCase(),
          guesses: undefined,
          movesLeft: 7
        };
}

function hideCharacters(word, guesses) {
  var mapper = function (charAsStr) {
    if (Belt_SetString.has(guesses, charAsStr)) {
      return charAsStr;
    } else {
      return "*";
    }
  };
  return Caml_splice_call.spliceObjApply("", "concat", [word.split("").map(mapper)]);
}

function guessesCoversTheWord(word, guesses) {
  var wordWithHiddenCharacters = hideCharacters(word, guesses);
  return wordWithHiddenCharacters === word;
}

function guess(c, state) {
  if (typeof state === "number") {
    return state;
  }
  if (state.TAG !== /* Play */0) {
    return state;
  }
  var newGuesses = Belt_SetString.add(state.guesses, c);
  if (state.word.indexOf(c) !== -1) {
    if (guessesCoversTheWord(state.word, newGuesses)) {
      return {
              TAG: /* Won */1,
              word: state.word
            };
    } else {
      return {
              TAG: /* Play */0,
              word: state.word,
              guesses: newGuesses,
              movesLeft: state.movesLeft
            };
    }
  }
  var state$p_0 = state.word;
  var state$p_2 = state.movesLeft - 1 | 0;
  var state$p = {
    TAG: /* Play */0,
    word: state$p_0,
    guesses: newGuesses,
    movesLeft: state$p_2
  };
  if (state.movesLeft === 1) {
    return {
            TAG: /* Hanged */2,
            word: state.word
          };
  } else {
    return state$p;
  }
}

function updateGameState($$event, state) {
  if ($$event) {
    return guess($$event._0, state);
  } else {
    return initPlayGame(undefined);
  }
}

export {
  initPlayGame ,
  hideCharacters ,
  guessesCoversTheWord ,
  guess ,
  updateGameState ,
  
}
/* No side effect */
