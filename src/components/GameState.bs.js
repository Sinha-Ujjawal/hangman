// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_SetString from "rescript/lib/es6/belt_SetString.js";
import * as RandomWordGenerator from "../utils/RandomWordGenerator/RandomWordGenerator.bs.js";

function initPlayGame(param) {
  var word = RandomWordGenerator.getRandomWord(undefined).toUpperCase();
  var n = Belt_SetString.size(Belt_SetString.fromArray(word.split("")));
  return {
          TAG: /* Play */0,
          word: word,
          lettersCorrectlyPredicted: undefined,
          movesLeft: 7,
          numberOfCharsToFind: n
        };
}

function guess(c, state) {
  if (typeof state === "number") {
    return state;
  }
  if (state.TAG !== /* Play */0) {
    return state;
  }
  if (Belt_SetString.has(state.lettersCorrectlyPredicted, c)) {
    return state;
  }
  if (state.word.indexOf(c) !== -1) {
    var state$p_0 = state.word;
    var state$p_1 = Belt_SetString.add(state.lettersCorrectlyPredicted, c);
    var state$p_2 = state.movesLeft;
    var state$p_3 = state.numberOfCharsToFind - 1 | 0;
    var state$p = {
      TAG: /* Play */0,
      word: state$p_0,
      lettersCorrectlyPredicted: state$p_1,
      movesLeft: state$p_2,
      numberOfCharsToFind: state$p_3
    };
    if (state.numberOfCharsToFind === 1) {
      return {
              TAG: /* Won */1,
              word: state.word
            };
    } else {
      return state$p;
    }
  }
  var state$p_0$1 = state.word;
  var state$p_1$1 = state.lettersCorrectlyPredicted;
  var state$p_2$1 = state.movesLeft - 1 | 0;
  var state$p_3$1 = state.numberOfCharsToFind;
  var state$p$1 = {
    TAG: /* Play */0,
    word: state$p_0$1,
    lettersCorrectlyPredicted: state$p_1$1,
    movesLeft: state$p_2$1,
    numberOfCharsToFind: state$p_3$1
  };
  if (state.movesLeft === 1) {
    return {
            TAG: /* Hanged */2,
            word: state.word
          };
  } else {
    return state$p$1;
  }
}

function updateGameState($$event, state) {
  if ($$event) {
    return guess($$event._0, state);
  } else {
    return initPlayGame(undefined);
  }
}

export {
  initPlayGame ,
  guess ,
  updateGameState ,
  
}
/* No side effect */
